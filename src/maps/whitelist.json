{
  "queries": [
    "select grade from dimensions.grade",
    "select t.state_id,state_name ,t.status from dimensions.state as d join (select state_id , case when sum > 0 then 'YES' else 'NO' end as status from datasets.nas_started_state) as t on  d.state_id = t.state_id order by d.state_name asc",
    "select t3.district_id, district_name,latitude,longitude, lo_name , round(cast(sum(t.sum) as numeric ),2) as performance from datasets.nas_performance_district0lo0subject0grade as t join dimensions.lo as t2 on t.lo_code = t2.lo_code join dimensions.district as t3 on t.district_id = t3.district_id group by district_name,lo_name,t3.district_id,latitude,longitude",
    "select t.lo_code, lo_name, grade, subject, round(cast(sum(sum) as numeric),2) as performance, state_name as district_name from datasets.nas_performance_state0lo0subject0grade as t join dimensions.state as d on t.state_id = d.state_id join dimensions.lo as l on t.lo_code = l.lo_code group by t.state_id, state_name, subject, grade, lo_name, t.lo_code",
    "select sum(sum) as total_schools from datasets.nas_no_of_schools_district",
    "select sum(sum) as students_surveyed from datasets.nas_students_surveyed_district",
    "select sum(sum) as total_teachers from datasets.nas_no_of_teachers_district",
    "select t3.state_id, state_name, lo_name , round(cast(sum(t.sum) as numeric ),2) as percentage from datasets.nas_performance_state0lo0subject0grade as t join dimensions.lo as t2 on t.lo_code = t2.lo_code join dimensions.state as t3 on t.state_id = t3.state_id group by state_name,lo_name,t3.state_id",
    "select category_name from dimensions.categorypgi",
    "select t.state_id,state_name ,t.status from dimensions.state as d join (select state_id , case when sum > 0 then 'YES' else 'NO' end as status from datasets.pgi_started_state) as t on  d.state_id = t.state_id order by d.state_name asc",
    "select t2.district_name, t1.district_id ,latitude, longitude, t1.category_name,round(cast(sum(t1.sum) as numeric ),2) as performance from datasets.pgi_category_state0district0categorypgi as t1 join dimensions.district as t2 on t2.district_id = t1.district_id group by t1.district_id, t2.district_name,t1.category_name, latitude, longitude",
    "select sum(sum) as outcome from datasets.pgi_category_state0district0categorypgi as t where category_name = 'Outcome'",
    "select sum(sum) as infra_score from datasets.pgi_category_state0district0categorypgi as t where category_name = 'Infrastructure, Facilities, Student Entitlements'",
    "select sum(sum) as governance_processes from datasets.pgi_category_state0district0categorypgi as t where category_name = 'Governance Processes'",
    "SELECT s.state_name, s.state_id, c.category_name, sum(c.sum) as performance FROM dimensions.state s JOIN datasets.pgi_category_state0categorypgi c ON s.state_id = c.state_id GROUP BY s.state_id,s.state_name, c.category_name",
    "select category_name from dimensions.categoryudise",
    "select t.state_id,state_name ,t.status from dimensions.state as d join (select state_id , case when sum > 0 then 'YES' else 'NO' end as status from datasets.udise_started_state) as t on  d.state_id = t.state_id order by d.state_name asc",
    "select t2.district_name, t1.district_id ,latitude, longitude, t1.category_name,round(cast(sum(t1.sum) as numeric ),2) as percentage from datasets.udise_category_district0categoryudise as t1 join dimensions.district as t2 on t2.district_id = t1.district_id group by t1.district_id, t2.district_name,t1.category_name, latitude, longitude",
    "select sum(sum) as total_students from datasets.udise_no_of_students_district",
    "select round(cast (avg(sum) as numeric),2) as ptr from datasets.udise_category_district0categoryudise where category_name = 'PTR'",
    "select round(cast (avg(sum) as numeric),2) as schs_with_toilet from datasets.udise_category_district0categoryudise where category_name = '% schools having toilet'",
    "select round(cast (avg(sum) as numeric),2) as schs_having_electricity from datasets.udise_category_district0categoryudise where category_name = '% schools having electricity'",
    "select round(cast (avg(sum) as numeric),2) as schs_having_water from datasets.udise_category_district0categoryudise where category_name = '% schools having drinking water'",
    "select t2.state_name, t1.state_id , t1.category_name,round(cast(sum(t1.sum) as numeric ),2) as percentage from datasets.udise_category_state0categoryudise as t1 join dimensions.state as t2 on t2.state_id = t1.state_id group by t1.state_id, t2.state_name,t1.category_name",
    "select medium from dimensions.medium ORDER BY id ASC ",
    " select round(cast(avg(sum) as numeric),2) as total_coverage from datasets.diksha_linkedqrcount_textbookdiksha0grade0subject0medium",
    "select subject as subject , grade as class , round(cast(sum(sum) as numeric),2) as performance from datasets.diksha_linkedqrcount_textbookdiksha0grade0subject0medium as t1 group by subject ,grade ",
    " select round(cast(avg(sum) as numeric),2) as content_coverage from datasets.diksha_qrcoverage_textbookdiksha0grade0subject0medium ",
    "select subject as subject , grade as class , round(cast(avg(sum) as numeric),2) as performance from datasets.diksha_contentqrcode_textbookdiksha0grade0subject0medium as t1 group by subject ,grade ",
    "select t2.state_name  ,sum(t1.sum) as users from datasets.diksha_plays_per_capita_state as t1 join dimensions.state as t2 on t1.state_id = t2.state_id group by t2.state_name ",
    "select sum(sum) as total_etbs from datasets.diksha_resourcecount_textbookdiksha0grade0subject0medium",
    "select sum(sum) as total_qr_codes from datasets.diksha_totalqrcodes_textbookdiksha0grade0subject0medium",
    "select round(cast(avg(sum) as numeric),2) as content_coverage from datasets.diksha_qrcoverage_textbookdiksha0grade0subject0medium",
    "select program_name from dimensions.programnishtha",
    "select  program_name , case when sum > 0 then 'YES' else 'NO' end as status from datasets.nishtha_started_programnishtha group by program_name,status  order by program_name",
    "select t1.program_name , sum(t1.sum) as total_courses ,sum(t2.sum) as  total_medium from datasets.nishtha_total_courses_programnishtha as t1 join datasets.nishtha_total_medium_programnishtha as t2 on t1.program_name = t2.program_name group by t1.program_name",
    "select t1.program_name, round(cast(avg(t1.sum) as numeric),2) as target_achieved, round(cast(avg(t1.sum) as numeric) + (cast(avg(t2.sum) as numeric)),2) as total_target from datasets.nishtha_perc_target_achieved_enrolment_programnishtha as t1 join datasets.nishtha_perc_target_remaining_enrolment_programnishtha as t2 on t1.program_name = t2.program_name group by t1.program_name",
    "select t1.program_name, round(cast(avg(t1.sum) as numeric),2) as target_achieved, round(cast(avg(t1.sum) as numeric) + (cast(avg(t2.sum) as numeric)),2) as total_target from datasets.nishtha_perc_target_achieved_certificates_programnishtha as t1 join datasets.nishtha_perc_target_remaining_certificates_programnishtha as t2 on t1.program_name = t2.program_name group by t1.program_name",
    "select t1.course_name , t1.sum as total_enrolment , t2.sum as total_certifications from datasets.nishtha_total_enrolment_coursenishtha as t1 join datasets.nishtha_total_certification_coursenishtha  as t2 on t1.course_name = t2.course_name group by t1.course_name,t1.sum,t2.sum ",
    "select d.district_name , sum(t1.sum) as total_enrolment , sum(t2.sum) as total_certification from datasets.nishtha_consumptionenrolment_district0programnishtha as t1 join datasets.nishtha_consumptioncertification_district0programnishtha as t2 on t1.district_id = t2.district_id join dimensions.district as d  on t2.district_id=d.district_id group by d.district_name",
    "select sum(sum) as total_enrolment from datasets.nishtha_total_enrolment_district",
    "select sum(sum) as total_completion from datasets.nishtha_total_completion_district",
    "select sum(sum) as total_certification from datasets.nishtha_total_certification_district",
    "select sum(sum) as total_mediums from datasets.nishtha_total_medium_programnishtha",
    "select category_name from dimensions.categorypm",
    "select t1.category_name,t2.district_name,t1.district_id, cast(sum(t1.sum) as numeric) as total_count FROM datasets.pm_poshan_category_daily_district0categorypm as t1 join dimensions.district as t2 on t1.district_id = t2.district_id group by t1.district_id,t2.district_name,t1.category_name",
    "select count(distinct(district_id)) as total_districts from datasets.pm_poshan_category_daily_district0categorypm",
    "select sum(sum) as total_schools from datasets.pm_poshan_category_daily_district0categorypm where category_name = 'Total Schools'",
    "select sum(sum) as total_meals_served from datasets.pm_poshan_total_meals_served_daily_district",
    "select academicyear_id, academicyear from dimensions.academicyear",
    "select district_name, (avg * 100) as avg from dimensions.district as d join datasets.rev_and_monitoring_district_monthly_academicyear0district as t on t.district_id = d.district_id ORDER BY avg ASC",
    "select district_name, t.review_status from dimensions.district as d join (select district_id, academicyear_id, month, case when sum > 0 then 'YES' else 'NO' end as review_status from datasets.rev_and_monitoring_district_monthly_academicyear0district ) as t on d.district_id = t.district_id order by d.district_name asc",
    "select ceil(round(CAST(avg(avg)*100 as numeric),2)) as percentage from datasets.rev_and_monitoring_district_monthly_academicyear0district",
    "select min(academic_year) as min_year,max(academic_year) as max_year,sum(count_school_statistics_total_schools) as total_schools from ingestion.Scl_stats_total_schools_by_state where state_id = {state_id} group by state_id",
    "select count_school_statistics_total_schools as total_schools from ingestion.Scl_stats_total_schools_by_state where state_id = {state_id} and (academic_year = lastYear)",
    "select min(academic_year) as min_year,max(academic_year) as max_year, district_name, sum(count_school_statistics_total_schools) as total_schools from (select distinct(district_id), state_id from ingestion.dimension_master) as m join ingestion.Scl_stats_total_schools_by_district as t on m.district_id = t.district_id left join ingestion.dimension_state as s on m.state_id = s.state_id left join ingestion.dimension_district as d on t.district_id = d.district_id where m.state_id = {state_id} group by t.district_id, district_name, state_name",
    "select min(academic_year) as min_year,max(academic_year) as max_year,district_name as location, school_category,sum(count_category_wise_schools) as category_wise_schools from (select distinct(district_id), state_id from ingestion.dimension_master) as m join ingestion.Scl_stats_cat_wise_schools_by_district as t on m.district_id = t.district_id left join ingestion.dimension_district as d on d.district_id = t.district_id where m.state_id = {state_id} group by t.district_id, district_name ,school_category",
    "select min(a.academic_year) as min_year,max(a.academic_year) as max_year,b.state_name as location,SUM(CASE WHEN a.sum_total_students_enrolled > 0 AND a.sum_total_students_enrolled <= 50 THEN 1 ELSE 0 END) AS count_0_to_50_students_enrolled,SUM(CASE WHEN a.sum_total_students_enrolled > 50 AND a.sum_total_students_enrolled <= 100 THEN 1 ELSE 0 END) AS count_50_to_100_students_enrolled,SUM(CASE WHEN a.sum_total_students_enrolled > 100 AND a.sum_total_students_enrolled <= 150 THEN 1 ELSE 0 END) AS count_100_to_150_students_enrolled,SUM(CASE WHEN a.sum_total_students_enrolled > 150 AND a.sum_total_students_enrolled <= 200 THEN 1 ELSE 0 END) AS count_150_to_200_students_enrolled,SUM(CASE WHEN a.sum_total_students_enrolled > 200 THEN 1 ELSE 0 END) AS count_200_to_more_students_enrolled from ingestion.Scl_stats_total_enroll_by_state as a  inner join ingestion.dimension_state as b on a.state_id = b.state_id inner join ingestion.Scl_stats_total_schools_by_state as c on b.state_id=c.state_id  where b.state_id={state_id} group by b.state_name, b.state_id ",
    "select ceil((cast( count(t1.school_id) as numeric)/cast (count(t2.school_id) as numeric))*100) as compliance_percentage, t2.district_id, t2.district_name from (select c.percentage, c.school_id as school_id from  (select a.school_id,(sum(a.sum)/sum(b.sum))*100 as percentage, sum(b.sum) as total_students, sum(a.sum) as attendace_marked from datasets.sch_att_total_students_daily_school as b join datasets.sch_att_students_attendance_marked_daily_school as a on a.school_id = b.school_id and a.date = b.date where a.date between startDate and endDate group by a.school_id) as c where c.percentage > 50) as t1 full join (select d.school_id, e.district_id, e.district_name from datasets.sch_att_students_attendance_marked_daily_school as d join dimensions.school as e on d.school_id = e.school_id group by d.school_id, e.district_id, e.district_name) as t2 on t1.school_id = t2.school_id group by t2.district_id, t2.district_name",
    "select ceil((cast( count(t1.school_id) as numeric)/cast (count(t2.school_id) as numeric))*100) as compliance_percentage from (select c.percentage, c.school_id as school_id from  (select a.school_id,(sum(a.sum)/sum(b.sum))*100 as percentage, sum(b.sum) as total_students, sum(a.sum) as attendace_marked from datasets.sch_att_total_students_daily_school as b join datasets.sch_att_students_attendance_marked_daily_school as a on a.school_id = b.school_id and a.date = b.date where a.date between startDate and endDate group by a.school_id) as c where c.percentage > 50) as t1 full join (select d.school_id, e.district_id, e.district_name from datasets.sch_att_students_attendance_marked_daily_school as d join dimensions.school as e on d.school_id = e.school_id group by d.school_id, e.district_id, e.district_name) as t2 on t1.school_id = t2.school_id ",
    "select ceil((cast( count(t1.school_id) as numeric)/cast (count(t2.school_id) as numeric))*100) as compliance_percentage, dense_rank() over(order by (count(t1.school_id)/count(t2.school_id)*100) desc) as rank, t2.district_id, t2.district_name from (select c.percentage, c.school_id as school_id from (select a.school_id,(sum(a.sum)/sum(b.sum))*100 as percentage, sum(b.sum) as total_students, sum(a.sum) as attendace_marked from datasets.sch_att_total_students_daily_school as b join datasets.sch_att_students_attendance_marked_daily_school as a on a.school_id = b.school_id and a.date = b.date where a.date between startDate and endDate group by a.school_id) as c where c.percentage > 50) as t1 full join (select d.school_id, e.district_id, e.district_name from datasets.sch_att_students_attendance_marked_daily_school as d join dimensions.school as e on d.school_id = e.school_id group by d.school_id, e.district_id, e.district_name) as t2 on t1.school_id = t2.school_id group by t2.district_id, t2.district_name ",
    "select district_name, ceil(round(CAST(avg(a.students_present/a.students_marked)*100 as numeric),2)) as stt_avg from  (select present_table.district_id,present_table.date as att_date,present_table.sum as students_present,marked_table.sum as students_marked from datasets.sch_att_students_marked_present_daily_district as present_table join datasets.sch_att_students_attendance_marked_daily_district as marked_table on present_table.date = marked_table.date and present_table.district_id = marked_table.district_id) as a join dimensions.district as district_wise_table on district_wise_table.district_id = a.district_id where a.att_date between startDate and endDate group by a.district_id, district_name order by stt_avg asc",
    "select ceil(round(CAST(avg(a.students_present/a.students_marked)*100 as numeric),2)) as stt_avg from  (select present_table.district_id,present_table.date as att_date,present_table.sum as students_present,marked_table.sum as students_marked from datasets.sch_att_students_marked_present_daily_district as present_table join datasets.sch_att_students_attendance_marked_daily_district as marked_table on present_table.date = marked_table.date and present_table.district_id = marked_table.district_id) as a where a.att_date between startDate and endDate",
    "select a.gender, round(CAST(avg(a.students_present/a.students_marked)*100 as numeric),2) as stt_avg from  (select present_table.gender,present_table.date as att_date,present_table.sum as students_present,marked_table.sum as students_marked from datasets.sch_att_studentspresent_daily_gender0district as present_table join datasets.sch_att_studentsmarked_daily_gender0district as marked_table on present_table.date = marked_table.date and present_table.district_id = marked_table.district_id) as a join dimensions.gender as gender_wise_table on gender_wise_table.gender = a.gender where a.att_date between startDate and endDate group by a.gender",
    "select schoolcategory_name, round(CAST(avg(a.students_present/a.students_marked)*100 as numeric),2) as stt_avg from  (select present_table.schoolcategory_id,present_table.date as att_date,present_table.sum as students_present,marked_table.sum as students_marked from datasets.sch_att_studentspresent_daily_schoolcategory0district as present_table join datasets.sch_att_studentsmarked_daily_schoolcategory0district as marked_table on present_table.date = marked_table.date and present_table.district_id = marked_table.district_id) as a join dimensions.schoolcategory as schoolcategory_wise_table on schoolcategory_wise_table.schoolcategory_id = a.schoolcategory_id where a.att_date between startDate and endDate group by a.schoolcategory_id, schoolcategory_name ",
    "select district_name, ceil(round(CAST(avg(a.students_present/a.students_marked)*100 as numeric),2)) as stt_avg, dense_rank() over(order by avg(a.students_present/a.students_marked) desc) as rank from  (select present_table.district_id,present_table.date as att_date,present_table.sum as students_present,marked_table.sum as students_marked from datasets.sch_att_students_marked_present_daily_district as present_table join datasets.sch_att_students_attendance_marked_daily_district as marked_table on present_table.date = marked_table.date and present_table.district_id = marked_table.district_id) as a join dimensions.district as district_wise_table on district_wise_table.district_id = a.district_id where a.att_date between startDate and endDate group by a.district_id, district_name",
    "select min(academic_year) as min_year,max(academic_year) as max_year, district_name, sum(sum_cwsn_enrolled) as cwsn_enrolled, round(avg(percentage), 0) as cwsn_enrollment from (select distinct(district_id), state_id from ingestion.dimension_master) as m join ingestion.scl_stats_cwsn_enroll_by_district as t on m.district_id = t.district_id left join ingestion.dimension_state as s on m.state_id = s.state_id left join ingestion.dimension_district as d on t.district_id = d.district_id where m.state_id = {state_id} group by t.district_id, district_name, state_name",
    "select min(academic_year) as min_year,max(academic_year) as max_year,round(avg(percentage), 2) as cwsn_enrollment from ingestion.scl_stats_cwsn_enroll_by_state where state_id = {state_id} group by state_id",
    "select round(avg(percentage), 2) as cwsn_enrollment from ingestion.scl_stats_cwsn_enroll_by_state where state_id = {state_id} and (academic_year = lastYear)",
    "select min(academic_year) as min_year,max(academic_year) as max_year,sum(sum_total_students_enrolled) as students_enrolled from ingestion.scl_stats_total_enroll_by_state where state_id = {state_id} group by state_id",
    "select sum_total_students_enrolled as students_enrolled from ingestion.scl_stats_total_enroll_by_state where state_id = {state_id} and (academic_year = lastYear)",
    "select min(academic_year) as min_year,max(academic_year) as max_year,district_name as location,t.school_category, sum(sum_students_enrolled) as students_enrolled from (select distinct(district_id), state_id from ingestion.dimension_master) as m join ingestion.Scl_stats_grade_wise_enroll_by_district as t on m.district_id = t.district_id left join ingestion.dimension_district as d on t.district_id = d.district_id where m.state_id = {state_id} group by t.district_id, district_name, t.school_category",
    "select min(academic_year) as min_year,max(academic_year) as max_year,district_name as location, t.gender, sum(sum_students_enrolled) as students_enrolled from ingestion.Scl_stats_gender_wise_enroll_by_district as t left join ingestion.dimension_district as d on t.district_id = d.district_id left join (select distinct(district_id), state_id from ingestion.dimension_master) as m on m.district_id = t.district_id where m.state_id = {state_id} group by t.district_id, district_name, t.gender",
    "select min(academic_year) as min_year,max(academic_year) as max_year,district_name as location, t.student_category, sum(sum_students_enrolled) as students_enrolled from ingestion.Scl_stats_std_cat_wise_enroll_by_district as t left join ingestion.dimension_district as d on t.district_id = d.district_id left join (select distinct(district_id), state_id from ingestion.dimension_master) as m on m.district_id = t.district_id where m.state_id = {state_id} group by t.district_id, district_name, t.student_category",
    "select round(percentage,0) as percentage,min(academic_year) as min_year,max(academic_year) as max_year,district_name, dense_rank() over(order by sum(sum_cwsn_enrolled) desc) as cwsn_enrolled_rank, dense_rank() over(order by sum(sum_total_students_enrolled) desc) as students_enrolled_rank from ingestion.scl_stats_cwsn_enroll_by_district as t left join ingestion.dimension_district as d on t.district_id = d.district_id left join (select distinct(district_id), state_id from ingestion.dimension_master) as m on m.district_id = t.district_id where state_id = {state_id} group by t.district_id, district_name,t.percentage",
    "select ceil((cast( count(t1.school_id) as numeric)/cast (count(t2.school_id) as numeric))*100) as compliance_percentage, t2.district_id, t2.district_name from (select c.percentage, c.school_id as school_id from  (select a.school_id,(sum(a.sum)/sum(b.sum))*100 as percentage, sum(b.sum) as total_teachers, sum(a.sum) as attendace_marked from datasets.sch_att_total_teachers_daily_school as b join datasets.sch_att_teachers_marked_daily_school as a on a.school_id = b.school_id and a.date = b.date where a.date between startDate and endDate group by a.school_id) as c where c.percentage > 50) as t1 full join (select d.school_id, e.district_id, e.district_name from datasets.sch_att_teachers_marked_daily_school as d join dimensions.school as e on d.school_id = e.school_id group by d.school_id, e.district_id, e.district_name) as t2 on t1.school_id = t2.school_id group by t2.district_id, t2.district_name",
    "select ceil((cast( count(t1.school_id) as numeric)/cast (count(t2.school_id) as numeric))*100) as compliance_percentage from (select c.percentage, c.school_id as school_id from  (select a.school_id,(sum(a.sum)/sum(b.sum))*100 as percentage, sum(b.sum) as total_teachers, sum(a.sum) as attendace_marked from datasets.sch_att_total_teachers_daily_school as b join datasets.sch_att_teachers_marked_daily_school as a on a.school_id = b.school_id and a.date = b.date where a.date between startDate and endDate group by a.school_id) as c where c.percentage > 50) as t1 full join (select d.school_id, e.district_id, e.district_name from datasets.sch_att_teachers_marked_daily_school as d join dimensions.school as e on d.school_id = e.school_id group by d.school_id, e.district_id, e.district_name) as t2 on t1.school_id = t2.school_id ",
    "select ceil((cast( count(t1.school_id) as numeric)/cast (count(t2.school_id) as numeric))*100) as compliance_percentage, dense_rank() over(order by (count(t1.school_id)/count(t2.school_id)*100) desc) as rank, t2.district_id, t2.district_name from (select c.percentage, c.school_id as school_id from (select a.school_id,(sum(a.sum)/sum(b.sum))*100 as percentage, sum(b.sum) as total_teachers, sum(a.sum) as attendace_marked from datasets.sch_att_total_teachers_daily_school as b join datasets.sch_att_teachers_marked_daily_school as a on a.school_id = b.school_id and a.date = b.date where a.date between startDate and endDate group by a.school_id) as c where c.percentage > 50) as t1 full join (select d.school_id, e.district_id, e.district_name from datasets.sch_att_teachers_marked_daily_school as d join dimensions.school as e on d.school_id = e.school_id group by d.school_id, e.district_id, e.district_name) as t2 on t1.school_id = t2.school_id group by t2.district_id, t2.district_name ",
    "select district_name, ceil(round(CAST(avg(a.teachers_present/a.teachers_marked)*100 as numeric),2)) as stt_avg from  (select present_table.district_id,present_table.date as att_date,present_table.sum as teachers_present,marked_table.sum as teachers_marked from datasets.sch_att_teachers_marked_present_daily_district as present_table join datasets.sch_att_teachers_marked_daily_district as marked_table on present_table.date = marked_table.date and present_table.district_id = marked_table.district_id) as a join dimensions.district as district_wise_table on district_wise_table.district_id = a.district_id where a.att_date between startDate and endDate group by a.district_id, district_name order by stt_avg asc",
    "select ceil(round(CAST(avg(a.teachers_present/a.teachers_marked)*100 as numeric),2)) as stt_avg from  (select present_table.district_id,present_table.date as att_date,present_table.sum as teachers_present,marked_table.sum as teachers_marked from datasets.sch_att_teachers_marked_present_daily_district as present_table join datasets.sch_att_teachers_marked_daily_district as marked_table on present_table.date = marked_table.date and present_table.district_id = marked_table.district_id) as a where a.att_date between startDate and endDate",
    "select district_name, ceil(round(CAST(avg(a.teachers_present/a.teachers_marked)*100 as numeric),2)) as stt_avg, dense_rank() over(order by avg(a.teachers_present/a.teachers_marked) desc) as rank from  (select present_table.district_id,present_table.date as att_date,present_table.sum as teachers_present,marked_table.sum as teachers_marked from datasets.sch_att_teachers_marked_present_daily_district as present_table join datasets.sch_att_teachers_marked_daily_district as marked_table on present_table.date = marked_table.date and present_table.district_id = marked_table.district_id) as a join dimensions.district as district_wise_table on district_wise_table.district_id = a.district_id where a.att_date between startDate and endDate group by a.district_id, district_name",
    "select min(academic_year) as min_year,max(academic_year) as max_year, district_name, sum(sum_total_teachers) as total_teachers from (select distinct(district_id), state_id from ingestion.dimension_master) as m join ingestion.Scl_stats_total_tchs_by_district as t on m.district_id = t.district_id left join ingestion.dimension_state as s on m.state_id = s.state_id left join ingestion.dimension_district as d on t.district_id = d.district_id where m.state_id = {state_id} group by t.district_id, district_name, state_name",
    "select sum_total_teachers as total_teachers from ingestion.Scl_stats_total_tchs_by_state where state_id = {state_id} and (academic_year = lastYear)",
    "select min(academic_year) as min_year,max(academic_year) as max_year ,sum(sum_total_teachers) as total_teachers from ingestion.Scl_stats_total_tchs_by_state where state_id = {state_id} group by state_id",
    "select district_name as location,t.school_category, sum(sum_total_teachers) as total_teachers from (select distinct(district_id), state_id from ingestion.dimension_master) as m join ingestion.scl_stats_grade_wise_tchs_by_district as t on m.district_id = t.district_id left join ingestion.dimension_district as d on t.district_id = d.district_id where m.state_id = {state_id} group by t.district_id, district_name, t.school_category",
    "select min(academic_year) as min_year,max(academic_year) as max_year, district_name as location,t.school_category, round(avg(sum_students_enrolled/sum_total_teachers),2) as total_teachers from (select distinct(district_id), state_id from ingestion.dimension_master) as m join ingestion.scl_stats_grade_wise_avg_pupil_tch_ratio_by_district as t on m.district_id = t.district_id left join ingestion.dimension_district as d on t.district_id = d.district_id where m.state_id = {state_id} group by t.district_id, district_name, t.school_category",
    "select min(academic_year) as min_year,max(academic_year) as max_year, district_name ,round(avg(sum_students_enrolled /sum_total_teachers ),0) as pupil_teacher_ratio  from (select distinct(district_id), state_id from ingestion.dimension_master) as m join ingestion.scl_stats_avg_pupil_tch_ratio_by_district as t on m.district_id = t.district_id left join ingestion.dimension_state as s on m.state_id = s.state_id left join ingestion.dimension_district as d on t.district_id = d.district_id where m.state_id = {state_id} group by t.district_id, district_name, state_name",
    "select min(academic_year) as min_year,max(academic_year) as max_year,round(avg(sum_students_enrolled /sum_total_teachers ),2) as pupil_teacher_ratio from ingestion.scl_stats_avg_pupil_tch_ratio_by_state where state_id = {state_id}",
    "select min(academic_year) as min_year,max(academic_year) as max_year,district_name, dense_rank() over(order by sum(sum_total_teachers) desc) as teachers_rank from ingestion.scl_stats_avg_pupil_tch_ratio_by_district as t left join ingestion.dimension_district as d on t.district_id = d.district_id left join (select distinct(district_id), state_id from ingestion.dimension_master) as m on m.district_id = t.district_id where state_id = {state_id} group by t.district_id, district_name",
    "select min(date) as min_date, max(date) as max_date, district_name, round(avg(percentage),2) as percentage from ingestion.sac_students_attendance_compliance_by_district as t left join ingestion.dimension_master as m on t.district_id = m.district_id left join ingestion.dimension_district as d on t.district_id = d.district_id group by t.district_id ,district_name",
    "select round(avg(percentage),2) as percentage from ingestion.sac_students_attendance_compliance_by_block",
    "select round(avg(percentage),2) as percentage from ingestion.sac_students_attendance_compliance_by_block where date between startDate and endDate",
    "select min(date) as min_date, max(date) as max_date, {level}_name, t.{level}_id, avg(percentage) as percentage, avg(count) as count, avg(sum) as sum, {level}_lat as latitude, {level}_long as longitude from ingestion.sac_students_attendance_compliance_by_{level} as t left join ingestion.dimensions as t2 on t.{level}_id = t2.{level}_id group by t.{level}_id, {level}_name, {level}_lat, {level}_long",
    "select min(date) as min_date, max(date) as max_date, state_name as location, avg(percentage) as percentage, min(count) as count from ingestion.sac_students_attendance_compliance_by_state as t left join ingestion.student_attendance as t2 on t.state_id = t2.state_id group by t.state_id, state_name"
  ]
}
